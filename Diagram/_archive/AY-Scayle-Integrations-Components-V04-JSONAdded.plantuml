@startuml
allowmixing
title AY Marketplace Components Diagram
skinparam actorStyle awesome

'skinparam linetype polyline
/'
TODOS:
2- Delievery system
4- From which file to which account?
5- Aligining which HSO process proposal
6- Marketplace/Merchant settlmentfiles are generated by SPA
7- Adjust the numbers on PSP files according to Ledger
8- Assign unique names to files offhand.
9- Draw the Reconcileless process
10- Draw ???
--------
Non technical quesitons:
11- Must there be another ledger in SCAYLE-Pay side?
12- Would this design cover Scayle-Pay needs of a ledger system?
13- What is the main reason that they need ERP to be their ledger system?
14- Is this system scalable, as the # of trans grows?
15- Does this system offer real time processing? e.g. Immediate updates to acocunt balances and trans status
16- Comprehensive transaction tracking & audit capabilities & trans history and details
17- Automatic reconciliation
18- We're designing a ledger system with all those characterisitcs exploiting ERP partially, aren't we?
19- Are settlings and clearings between parties also possible?
20- Is a robust error handling and failure recovery in place?
21- Reports on transaction trends user behaviour, and financial performance
22- Concurrency and Consistency: Does system handle concurrent transactions and maintain data consistency across distributed systems?
23- Back up plan
24- A robust disaster recovery plan
25- High availability with minimal downtime
--------
26- (Modularity)How easy is it to replace or modify individual modules without affecting others?
27- (Scalability)Are scaling mechanisms like load balancers and auto-scaling used effectively?
28- (Scalability)How well does the system maintain performance under heavy loads?
29- (Reliability) Are there mechanisms in place to handle and recover from failures gracefully?
30- (Performance)Are there any performance bottlenecks in the system, and how are they addressed?
31- (Availabiity)Are there any planned maintenance schedules that affect availability?
32- (Extendibility)How easily can new features or functionalities be added to the system?
33- (Extendibility)Are there well-defined extension points and APIs for integration?
34- (Testability)How easy is it to test individual components in isolation?
35- (Testability)Are there automated test suites covering critical functionalities?
36- (Cost)How cost-effective is the architecture in terms of infrastructure and maintenance?
37- (Cost)Are there any opportunities to optimize costs without sacrificing performance or reliability?
'/
'-------------------------------------------------
'-----------   Definations  ----------------------
'-------------------------------------------------
actor AlexTheCustomer
package "AY MP Store UI" #AA6DFF{
    package "Basket<&basket>" {
        package "Merchants" {
            package "AdidasTheMerchant" {
                component [RunningShoes]
            }
        }
        component [Checkout]
    }
}
node "PSPs" #FF4081{
    package Klarna #PaleVioletRed{
        package Klarna_Authorize_Issues{
            file {
                json MarketPlace_SettlmentLine1<<Authorization>> {
                    "operation_key": "82eafcb9",
                    "operation_timestamp": "2022-12-08 17:17:40",
                    "operation_type": "authorization",
                    "operation_value": "1000",
                    "transaction_key": "9ce15ecf",
                    "authorized_value": "1000",
                    "authorized_timestamp": "2022-12-08 17:17:40",
                    "marketplace_transaction_reference": "ALPHA-SE-002",
                    "currency_code": "SEK",
                    "payment_method_code": "instant_capture",
                    "item_key": "04f4c1f2",
                    "marketplace_item_reference": "item#279986",
                    "item_description": "RunningShoes",
                    "merchant_key": "5da36e89",
                    "merchant_name": "Adidas",
                    "merchant_country_of_origin": "DEU",
                    "shop_key": "3b3698d3",
                    "shop_name": "Alpha SE",
                    "consumer_invoice_reference": "NULL",
                    "consumer_invoice_timestamp": "",
                    "commission_code": "NULL",
                    "initial_value": "1000",
                    "commission_rate": "0,00",
                    "commission_value": "0,00",
                    "commission_vat_rate": 0,
                    "commission_vat_value": "0,00",
                    "payment_fee_rate": 1,
                    "payment_fee_value": "10",
                    "payment_fee_vat_rate": 19,
                    "payment_fee_vat_value": "1.9",
                    "reversal_penalty": "0,00",
                    "reversal_reason": "NULL",
                    "payout_currency_code": "EUR",
                    "exchange_rate": "",
                    "custom_data": "",
                    "payout_value": "990"
                }
            }
        }
        package Klarna_Capture_Issuer{
            file {
                json PSP_SettlmentTrans1<<FEE>> {
                    "type": "FEE",
                    "capture_date": "2022-12-11T23:06:22.000Z",
                    "sale_date": "2022-12-05T16:50:23.168Z",
                    "order_id": "8b2dea16-2ba3-456d-8203-f1f655a4e612",
                    "short_order_id": "0NK4H6L6-1",
                    "capture_id": "80157a40-5a26-467f-934e-b90c26549071",
                    "merchant_reference1": "ayou-139-204559361",
                    "merchant_reference2": "",
                    "amount": "10",
                    "posting_currency": "EUR",
                    "refund_id": "",
                    "purchase_country": "DE"
                }
                json PSP_SettlmentTrans2<<Sale>>{
                    "type": "SALE",
                    "capture_date": "2022-12-11T23:06:22.000Z",
                    "sale_date": "2022-12-05T16:50:23.168Z",
                    "order_id": "8b2dea16-2ba3-456d-8203-f1f655a4e612",
                    "short_order_id": "0NK4H6L6-1",
                    "capture_id": "80157a40-5a26-467f-934e-b90c26549071",
                    "merchant_reference1": "ayou-139-204559361",
                    "merchant_reference2": "",
                    "amount": "990",
                    "posting_currency": "EUR",
                    "refund_id": "",
                    "purchase_country": "DE"
                }
            }
        }
        package Klarna_Void_Issuer{

        }
        package Klarna_Return_Issuer{

        }
    }
}
package "SCAYLE Pay" #OrangeRed{
    object Refrences{
        |= |=  Klarna fee  |=  Scayle fee  |=  MP commission |=  ScaylePay VAT  |= AY MP VAT |= PSP VAT |= Merchants VAT |
        <#lightgreen>| Refrence | 1%  | 2% | 7% | 19% | We don't care | We don't care | We don't care |
        | Sample: 1000 € | 10 €  | 20 € | 70 € | 3.8 € | We don't care | We don't care | We don't care |
    }
    component PaymentCoordinator
    () "MonthlyBatchJob"
    component PayoutDistributor
    component MarketPlacePayoutIssuer {
        file {
            json MarketPlace_SettlmentLine2<<Capture>> {
                "operation_key": "493c887f",
                "operation_timestamp": "2022-12-09 18:15:16",
                "operation_type": "capture",
                "operation_value": "70",
                "transaction_key": "9ce15ecf",
                "authorized_value": "70",
                "authorized_timestamp": "2022-12-08 17:17:40",
                "marketplace_transaction_reference": "ALPHA-SE-002",
                "currency_code": "EUR",
                "payment_method_code": "instant_capture",
                "item_key": "04f4c1f2",
                "marketplace_item_reference": "item#279986",
                "item_description": "RunningShoes",
                '-----------------------------
                'These fields are extra
                "merchant_key": "5da36e89",
                "merchant_name": "Adidas",
                "merchant_country_of_origin": "DEU",
                '-----------------------------
                "shop_key": "3b3698d3",
                "shop_name": "Alpha SE",
                '-----------------------------
                'Invoice number differs
                "consumer_invoice_reference": "invoice-2023#0051",
                '-----------------------------
                "consumer_invoice_timestamp": "2022-12-09 18:00:52",
                "commission_code": "shirts_children",
                "initial_value": "70",
                "commission_rate": "0",
                "commission_value": "0",
                "commission_vat_rate": 19,
                "commission_vat_value": "0",
                '------------------------------
                'These fields are extra
                "payment_fee_rate": 0,
                "payment_fee_value": "0,00",
                "payment_fee_vat_rate": 0,
                "payment_fee_vat_value": "0,00",
                '------------------------------
                "reversal_penalty": "0,00",
                "reversal_reason": "NULL",
                "payout_currency_code": "EUR",
                "exchange_rate": "1",
                "custom_data": "",
                "payout_value": "70"
            }
        }
    }
    component MerchantPayoutIssuer{
        file {
            json MerchantTrans1<<Capture>> {
                "operation_key" : "338c8bd8",
                "operation_timestamp": " 2022-12-09 21:36:52",
                "operation_type": "capture",
                "operation_amount": 990,
                "transaction_key": "9ce15ecf",
                "authorized_amount": 990,
                "authorized_timestamp": " 2022-12-08 17:17:40",
                "marketplace_transaction_reference": "ALPHA-SE-002",
                "currency_code": "EUR",
                "payment_method_code": "instant_capture",
                "item_key": "5c46693c",
                "marketplace_item_reference": "item#39998",
                "item_description": "RunningShoes",
                "shop_key": "3b3698d3",
                "shop_name": "Alpha SE",
                "consumer_invoice_reference": "invoice-2023#0005",
                "consumer_invoice_timestamp": " 2022-12-09 21:22:28",
                "commission_code": "shirts_children",
                "initial_amount": 990,
                "commission_rate": 2000000000000000,
                "commission_amount": 0,
                "commission_vat_rate": 19,
                "commission_vat_amount": 0,
                "reversal_penalty": 0,
                "reversal_reason": "NULL",
                "payout_currency_code": "EUR",
                "exchange_rate": 1,
                "custom_data": "forceclose=true",
                "payout_value": 900
            }
        }
    }
    component TransCollectorAPI
    component EscrowBalanceManagerAPI
}
package "Middlewares" #5094FC{
    package "Ingress API" #OldLace{
        node FlowOrchestrator #Tomato
        node "UploaderAPI" #Peru
        cloud NewFileEvent_Subscriber #Yellow
        node "DeliveryManager" {
            queue "Queue"
        }
        component [DataPersister]
        component [Authenticator]
        component [Rate limiter]
        component [Validator] 
    }
    package "DataImporter" #CadetBlue{
        frame "MasterData" {
            component [MasterDataImporterAPI]
            component [RetrieveMasterDataAPI]
        }
    }
    package "Reconciler" #00C853 {
        component [ReconcilerAPI]
        package "MatchFinderLogic" {
            component [MatchFinderAPI]
            object MatchFindingRules {
                * File name --> FileNamePatternMap
                * Date
                * Filestamp
                * Operation key
                ---
                * JournalNum(?)
                ---
            }
            component FileNamesPattern {
                object FileNamePatternMap{
                    = Klarna
                    |=  |= PSP |= Merchant |= MarketPlace |
                    | **Pattern** | ["settlments"]_[CountryCode]_["Klarna"]_[Date]_[Date].csv | ["SCAYLE PAY"]_["Marketplace"]_["Settlement"]_[Date].csv | ["SCAYLE PAY"]_["Merchant"]_["Settlement"]_[Date].csv |
                    | **Common filters** | [Date] | [Date] | [Date] |
                    | **Other applicable filters** | [CountryCode], [PSPName] | "SCAYLE PAY", "Marketplace" | "Merchant" |
                }
            }
        }
    }
    package "Aggregator" #FF6F00 {
        component [AggregatorAPI]
        component [AggregatingRules] {
            object Grouping {
                * MerchantCode
                * Date
            }
        }
    }
    package "Transformer" #FFD600{
        component [TransformerAPI]
        component [TransformingRules]
        component [TransformingMaps] {
            map intial {
                XML => CSV
                CVS => JSON
                AmountStr => Integer
                DateFormat => YY MM DD HH MM SS
                "operartion_value" => "OpValue"
                "operation_amount" => "OpValue"
            }
            map final {
                OpValue => NetAmount
                FinancialDimensionConvension => Channel-Merchant-ShopKey
            }
        }
    }
    package "ResultGenerator" #OliveDrab{
        component [ResultGeneratorAPI]
        component [ChoosingResultTemplateRules]
        object ResultTemplates {
            * GL_Jour
            * Corrective_Jour
            * Customer_Invoice
            * FreeText_Invoice
            * CreditNote
        }
    }
}
package "<color:white>Persistance" #DarkMagenta {
    package "File storage" #SkyBlue {
        node "UploaderAgent"
        stack "Transactions files containers" {
            folder CustomerBA_Folder {
                component [CustomerBA_SetlmentFiles]

            }
            folder AYCommissionBA_Folder {
                component [AYCommission_SettlmentFiles]
            }
            folder MerchantBA_Folder {
                component [MerchantBA_SettlmentFiles]
            }
            folder ScayleEscrowBA_Folder {
                component [ScayleEscrowBA_SettlmentFiles]
            }
            folder ScayleFeeBA_Folder {
                component [ScayleFeeBA_SettlmentFiles]
            }
            folder ScayleTrans_Folder {
                component [ScayleTrans_Files]
            }
        }
        cloud NewFileEvent_Publisher #Yellow
    }
    database Database #Salmon as"
                Transformed data
                ===
                Reconciled data
                ===
                Aggregated data
                ===
                Master data
                == Refrence data ==
                Cached data
                ===
                WaitedForMatching data
                ===
                Configuration data
                ===
                Paramaters data
"
    package "DataIntegrationBlob" #MediumSpringGreen {
        component [D365FinOpsERP_Outbound_Storage]
    }
}
frame Banks #DarkTurquoise{
    node "TransactionGenerator"<<SettlmentFile generator>> #Khaki
    node "UserBank" {
        component [CustomerBA]
    }
    node "ScayleBank" {
        package "ScayleBA.s" {
            component [EscrowBA]
            component [ScayleFeeCollectorBA]
        }
    }
    
    node "MarketPlacesBanks" {
        package "Marketplaces BA.s" {
            package "AYMPC" {
                component [AYCommissionBA]
            }
        }
    }
    node "MerchantBank" {
        node "Merchants BA.s" {
            component [AdidasBA]
        }
    }
    node "KlarnaBank" {
        node "Klarna BA.s" {
            component [KlarnaFeeCollectorBA]
        }
    }
}
package "D365 Finance ERP System" #MediumSlateBlue{
    package "AYHL Legal Entity" {
        package "SPAY Legal Entity" #SpringGreen {
            package "Data management framework" {
                node JournalsDataEntity
                package Parties {
                    object Adidas {
                        |= Property |= Value |
                        | MainAccount | 11101110111 |
                        | OffsetAccount | 99909990999 |
                        | Address | Deutschland |
                        | Currency | Euro |
                        | FinancialDimensions | ["ShopKey", "Location", "Channel"] |
                        | Roles | "["Customer", "Vendor"]" |
                    }
                }
            }
            package GL {
                object Rules{
                    * =Assets = Liabilities + Equity
                    * Assets and Expenses: +Dr and -Cr
                    * Liabilities and Revenues = -Dr and +Cr
                    * Net Income = Revenue - Expenses
                    * Net Income will be added to equity on closing
                }
                object AccountsCategorization {
                    = Assets(+Dr, -Cr)
                    |_ Cash
                    |_ Customer Receivable
                    ---
                    = Expenses(+Dr, -Cr))
                    ---
                    = Liabilities(-Dr, +Cr)
                    |_ MP Service Payable
                    |_ Tax Payable
                    |_ Vendor Payable
                    |_ Payment Service Payable
                    ---
                    = Equity(-Dr, +Cr)
                    |_ Net income
                    ---
                    = Revenues(-Dr, +Cr)
                    |_ Commission Revenue
                }
                node TrialBalance{
                    object TrialBalance{
                        =Assets
                        |= |= Debit(+) |= Credit(-) |
                        | Cash | 1000 |  |
                        | **Total** | **1000** |

                        \n
                        =Liabilities
                        |= |= Debit(-) |= Credit(+) | 
                        | Payment Service Payable | | 10 |
                        | MP Service Payable |  | 70 | 
                        | Tax Payable |  | 3.8 |
                        | Merchant Payable |  | 900 |
                        | **Total** |  | **983.8** |

                        \n
                        =Equity
                        |= |= Debit(-) |= Credit(+) | 
                        | Net Income |  | 16.2 |
                        | **Total** |  | **16.2** |

                    }
                }
            }
        }
        package "<color:white>AYMP Legal Entity" #Black{
            legend
            Taking care of 
            * Tax payable
            * Collecting commissions
            end legend
        }

        legend
        Taking care of 
        * SPAY-AYMP concolidation
        * Reporting 
        end legend
    }
    
    
    
}
package "DataIntegrator" #BurlyWood{
    cloud RecurringIntegrator
}
'-------------------------------------------------
'-----------   Relations  ------------------------
'-------------------------------------------------
'Before middleware layer
AlexTheCustomer -[bold]-> Checkout
Checkout -[#Black,dashed,thickness=10]-> PaymentCoordinator: Starting point
PaymentCoordinator -[#Black,dashed,thickness=10]> Klarna
Klarna -l-> CustomerBA
CustomerBA .[#Cyan,dotted,thickness=10].> TransactionGenerator
Klarna --> EscrowBA
Klarna -> KlarnaFeeCollectorBA
KlarnaFeeCollectorBA .[#Cyan,dotted,thickness=10]d.> TransactionGenerator
EscrowBA .[#Cyan,dotted,thickness=10].> TransactionGenerator
MonthlyBatchJob -d-> PayoutDistributor
PayoutDistributor ..> EscrowBalanceManagerAPI
EscrowBalanceManagerAPI .> AYCommissionBA
AYCommissionBA .[#Cyan,dotted,thickness=10].> TransactionGenerator
EscrowBalanceManagerAPI .> AdidasBA
EscrowBalanceManagerAPI .d.> ScayleFeeCollectorBA
ScayleFeeCollectorBA .[#Cyan,dotted,thickness=10].> TransactionGenerator
AdidasBA .[#Cyan,dotted,thickness=10].> TransactionGenerator
TransactionGenerator -[#GreenYellow,dashed,thickness=10]-> TransCollectorAPI: Settlment/\nTransaction files
TransCollectorAPI -[#GreenYellow,dashed,thickness=10]> UploaderAPI: A
MatchFindingRules --> FileNamePatternMap
'Integration layer
Parties -[bold]u-> MasterDataImporterAPI

'Business process engine
UploaderAPI -[#GreenYellow,dashed,thickness=10]> UploaderAgent: B
UploaderAgent -[#GreenYellow,dashed,thickness=10]l-> NewFileEvent_Publisher: C
NewFileEvent_Publisher -[#gold,thickness=10]> NewFileEvent_Subscriber: D
NewFileEvent_Subscriber -[#gold,thickness=10]-> Queue: E
Queue -[#gold,thickness=5]->FlowOrchestrator: E
FlowOrchestrator <--[#pink,dashed,thickness=10]-> RetrieveMasterDataAPI
FlowOrchestrator <--[#pink,dashed,thickness=10]-> TransformerAPI: F
FlowOrchestrator <---[#pink,dashed,thickness=10]-> ReconcilerAPI: G
FlowOrchestrator <----[#pink,dashed,thickness=10]-> AggregatorAPI: H
FlowOrchestrator -[#Lavender,dashed,thickness=10]-> DataPersister: Saves F,G,H results in DB
MasterDataImporterAPI -[#Lavender,dashed,thickness=10]-> DataPersister
DataPersister -[#Lavender,dashed,thickness=10]-> Database

'Result
FlowOrchestrator ----[#pink,dashed,thickness=10]--> ResultGeneratorAPI: I
FlowOrchestrator -[#pink,dashed,thickness=10]-> D365FinOpsERP_Outbound_Storage: J
D365FinOpsERP_Outbound_Storage -[#DodgerBlue,dashed,thickness=10]-> RecurringIntegrator: K
RecurringIntegrator -[#DodgerBlue,dashed,thickness=10]-> JournalsDataEntity: L
'(Daily batch job) -> RecurringIntegrator: M

'Hidden links
'--- Folders
ScayleTrans_Files -[hidden]d- ScayleFeeBA_SettlmentFiles
MerchantBA_SettlmentFiles -[hidden]d- ScayleTrans_Files
ScayleEscrowBA_SettlmentFiles -[hidden]d- AYCommission_SettlmentFiles
AYCommission_SettlmentFiles -[hidden]d- CustomerBA_SetlmentFiles
JournalsDataEntity -[hidden]- D365FinOpsERP_Outbound_Storage
NewFileEvent_Publisher -[hidden]d- D365FinOpsERP_Outbound_Storage
UploaderAgent -[hidden]d- NewFileEvent_Publisher
'--- Flow
FlowOrchestrator -[hidden]d- TransformerAPI
TransformerAPI -[hidden]d- ReconcilerAPI
ReconcilerAPI -[hidden]d- AggregatorAPI
AggregatorAPI -[hidden]d- ResultGeneratorAPI
RetrieveMasterDataAPI -[hidden]l- TransformerAPI
RetrieveMasterDataAPI -[hidden]d- TransformerAPI
NewFileEvent_Subscriber -[hidden]d- Queue
DataPersister -[hidden]u- Queue
'--- SPA
Refrences -[hidden]d- TransactionsCollector
'--- Banks
CustomerBA -[hidden]d- KlarnaFeeCollectorBA
KlarnaFeeCollectorBA -[hidden]d- EscrowBA
AYCommissionBA -[hidden]d- AdidasBA
'--- PSPs
Klarna_Void_Issuer -[hidden]d- Klarna_Authorize_Issues
Klarna_Return_Issuer -[hidden]d- Klarna_Capture_Issuer
'--- D365
Rules -[hidden]u- AccountsCategorization
@enduml
